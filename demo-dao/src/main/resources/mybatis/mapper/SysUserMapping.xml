<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mg.demo.dao.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.mg.demo.model.SysUser">
        <id column="userId" jdbcType="INTEGER" property="userId" />
        <result column="userName" jdbcType="VARCHAR" property="userName" />
        <result column="age" jdbcType="INTEGER" property="age" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="createTime" jdbcType="BIGINT" property="createtime" />
        <result column="isExpired" jdbcType="INTEGER" property="isexpired" />
        <result column="isLock" jdbcType="INTEGER" property="islock" />
    </resultMap>

    <sql id="Base_Column_List">
        userId, userName, age, account, status, createTime, isExpired, isLock
    </sql>

    <sql id="dynamicWhere">
        <where>
            <if test="@Ognl@isNotEmpty(userName)"> AND userName  LIKE CONCAT('%',#{userName},'%')</if>
            <if test="@Ognl@isNotEmpty(account)"> AND account  LIKE CONCAT('%',#{account},'%')</if>
        </where>
    </sql>

    <select id="selectAll" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_user
        <include refid="dynamicWhere" />
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_user
        where userId = #{userId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from sys_user
        where userId = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.mg.demo.model.SysUser">
        insert into sys_user (userId, userName, age,
        account, status, createTime,
        isExpired, isLock)
        values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
        #{account,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createtime,jdbcType=BIGINT},
        #{isexpired,jdbcType=INTEGER}, #{islock,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.mg.demo.model.SysUser">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                userId,
            </if>
            <if test="userName != null">
                userName,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="isexpired != null">
                isExpired,
            </if>
            <if test="islock != null">
                isLock,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=BIGINT},
            </if>
            <if test="isexpired != null">
                #{isexpired,jdbcType=INTEGER},
            </if>
            <if test="islock != null">
                #{islock,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.mg.demo.model.SysUser">
        update sys_user
        <set>
            <if test="userName != null">
                userName = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=BIGINT},
            </if>
            <if test="isexpired != null">
                isExpired = #{isexpired,jdbcType=INTEGER},
            </if>
            <if test="islock != null">
                isLock = #{islock,jdbcType=INTEGER},
            </if>
        </set>
        where userId = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mg.demo.model.SysUser">
        update sys_user
        set userName = #{userName,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        account = #{account,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        createTime = #{createtime,jdbcType=BIGINT},
        isExpired = #{isexpired,jdbcType=INTEGER},
        isLock = #{islock,jdbcType=INTEGER}
        where userId = #{userId,jdbcType=INTEGER}
    </update>
</mapper>